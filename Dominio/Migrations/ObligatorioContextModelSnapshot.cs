// <auto-generated />
using System;
using Library.AccesData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.AccesData.Migrations
{
    [DbContext(typeof(ObligatorioContext))]
    partial class ObligatorioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.BusinessLogic.Entities.Cabaña", b =>
                {
                    b.Property<int>("numeroHabitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("numeroHabitacion"));

                    b.Property<int>("capacidad")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("habilitada")
                        .HasColumnType("bit");

                    b.Property<string>("nombreTipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("poseeJacuzzi")
                        .HasColumnType("bit");

                    b.HasKey("numeroHabitacion");

                    b.ToTable("cabañas");
                });

            modelBuilder.Entity("Library.BusinessLogic.Entities.Configuracion", b =>
                {
                    b.Property<string>("Atributo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("LimiteInferior")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LimiteInferiorDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LimiteSuperior")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LimiteSuperiorDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Atributo");

                    b.ToTable("Configuraciones");
                });

            modelBuilder.Entity("Library.BusinessLogic.Entities.Mantenimiento", b =>
                {
                    b.Property<int>("mantenimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("mantenimientoId"));

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Habitacion")
                        .HasColumnType("int");

                    b.Property<string>("NombreTrabajador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("mantenimientoId");

                    b.ToTable("mantenimientos");
                });

            modelBuilder.Entity("Library.BusinessLogic.Entities.Tipo", b =>
                {
                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("costoXHuesped")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("nombre");

                    b.ToTable("tipos");
                });

            modelBuilder.Entity("Library.BusinessLogic.Entities.Usuario", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("Library.BusinessLogic.Entities.Cabaña", b =>
                {
                    b.OwnsOne("Library.BusinessLogic.Entities.ValueObjets.FotoCabaña", "Fotos", b1 =>
                        {
                            b1.Property<int>("CabañanumeroHabitacion")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CabañanumeroHabitacion");

                            b1.ToTable("cabañas");

                            b1.WithOwner()
                                .HasForeignKey("CabañanumeroHabitacion");
                        });

                    b.OwnsOne("Library.BusinessLogic.Entities.ValueObjets.NombreCabaña", "nombre", b1 =>
                        {
                            b1.Property<int>("CabañanumeroHabitacion")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CabañanumeroHabitacion");

                            b1.ToTable("cabañas");

                            b1.WithOwner()
                                .HasForeignKey("CabañanumeroHabitacion");
                        });

                    b.Navigation("Fotos")
                        .IsRequired();

                    b.Navigation("nombre")
                        .IsRequired();
                });

            modelBuilder.Entity("Library.BusinessLogic.Entities.Mantenimiento", b =>
                {
                    b.OwnsOne("Library.BusinessLogic.Entities.ValueObjets.FechaMantenimiento", "FechaMantenimiento", b1 =>
                        {
                            b1.Property<int>("mantenimientoId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Valor")
                                .HasColumnType("datetime2");

                            b1.HasKey("mantenimientoId");

                            b1.ToTable("mantenimientos");

                            b1.WithOwner()
                                .HasForeignKey("mantenimientoId");
                        });

                    b.Navigation("FechaMantenimiento")
                        .IsRequired();
                });

            modelBuilder.Entity("Library.BusinessLogic.Entities.Usuario", b =>
                {
                    b.OwnsOne("Library.BusinessLogic.Entities.ValueObjets.PasswordUsuario", "Contrasena", b1 =>
                        {
                            b1.Property<string>("UsuarioEmail")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UsuarioEmail");

                            b1.ToTable("usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioEmail");
                        });

                    b.Navigation("Contrasena")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
